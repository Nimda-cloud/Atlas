#!/usr/bin/env python3
"""
–¢–µ—Å—Ç GUI –∑ –æ—Å–Ω–æ–≤–Ω–∏–º ConfigManager
"""

import sys
import tkinter as tk

from ui.enhanced_settings import EnhancedSettingsView
from utils.config_manager import ConfigManager


def test_gui_creation():
    """–¢–µ—Å—Ç—É—î–º–æ creation GUI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞."""
    print("üé® –¢–ï–°–¢ –°–¢–í–û–†–ï–ù–ù–Ø GUI")
    print("=" * 30)

    #–°—Ç–≤–æ—Ä—é—î–º–æ ConfigManager
    config_manager = ConfigManager()

    #–í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Ç–µ—Å—Ç–æ–≤—ñ API –∫–ª—é—á—ñ
    print("üîë –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è —Ç–µ—Å—Ç–æ–≤–∏—Ö API –∫–ª—é—á—ñ–≤...")
    config_manager.set_setting("openai_api_key", "sk-gui-test-openai-key-12345")
    config_manager.set_setting("gemini_api_key", "gem-gui-test-12345")
    config_manager.set_setting("mistral_api_key", "mist-gui-test-12345")
    config_manager.set_setting("groq_api_key", "groq-gui-test-12345")
    config_manager.set_setting("current_provider", "gemini")
    config_manager.set_setting("current_model", "gemini-1.5-flash")

    #–¢–µ—Å—Ç—É—î–º–æ –≤—Å—ñ –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ –º–µ—Ç–æ–¥–∏
    print("üìã –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –º–µ—Ç–æ–¥—ñ–≤ ConfigManager...")
    methods_to_test = [
        "get_setting",
        "set_setting",
        "get_openai_api_key",
        "get_gemini_api_key",
        "get_mistral_api_key",
        "get_groq_api_key",
        "get_current_provider",
        "get_current_model",
        "get_model_name",
        "load",
        "save",
    ]

    for method_name in methods_to_test:
        if hasattr(config_manager, method_name):
            print(f"  ‚úÖ {method_name}: —î")
        else:
            print(f"  ‚ùå {method_name}: –≤—ñ–¥—Å—É—Ç–Ω—ñ–π")

    #–¢–µ—Å—Ç—É—î–º–æ creation GUI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
    print("\nüñ•Ô∏è –°—Ç–≤–æ—Ä–µ–Ω–Ω—è GUI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞...")
    try:
        #–°—Ç–≤–æ—Ä—é—î–º–æ –≥–æ–ª–æ–≤–Ω–µ –≤—ñ–∫–Ω–æ
        root = tk.Tk()
        root.withdraw()  #–•–æ–≤–∞—î–º–æ –≥–æ–ª–æ–≤–Ω–µ –≤—ñ–∫–Ω–æ

        #–°—Ç–≤–æ—Ä—é—î–º–æ —Ç–µ—Å—Ç–æ–≤–∏–π —Ñ—Ä–µ–π–º
        test_frame = tk.Frame(root)

        #–°—Ç–≤–æ—Ä—é—î–º–æ GUI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
        settings_view = EnhancedSettingsView(
            test_frame,
            config_manager=config_manager,
            plugin_manager=None,
            save_callback=None,
        )

        print("  ‚úÖ EnhancedSettingsView —Å—Ç–≤–æ—Ä–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ")

        #–ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —â–æ settings –∑–∞–≤–∞–Ω—Ç–∞–∂–∏–ª–∏—Å—è
        if hasattr(settings_view, "settings_vars"):
            print("  ‚úÖ –ó–º—ñ–Ω–Ω—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω—ñ")
        else:
            print("  ‚ùå –ó–º—ñ–Ω–Ω—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å –Ω–µ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω—ñ")

        #–ó–∞–∫—Ä–∏–≤–∞—î–º–æ –≤—ñ–∫–Ω–æ
        root.destroy()

        print("\nüéâ GUI —Ç–µ—Å—Ç –ø—Ä–æ–π—à–æ–≤ —É—Å–ø—ñ—à–Ω–æ!")
        return True

    except Exception as e:
        print(f"  ‚ùå –ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è GUI: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    success = test_gui_creation()
    sys.exit(0 if success else 1)
