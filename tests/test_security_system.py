#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º–∏ –±–µ–∑–ø–µ–∫–∏ Atlas

–ü–µ—Ä–µ–≤—ñ—Ä—è—î —Ä–æ–±–æ—Ç—É –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—Ö –ø—Ä–æ—Ç–æ–∫–æ–ª—ñ–≤ –ø—Ä–∏ –∑–∞–ø—É—Å–∫—É.
"""

import sys
import os
import tkinter as tk

# –î–æ–¥–∞—î–º–æ —à–ª—è—Ö –¥–æ –±–∞—Ç—å–∫—ñ–≤—Å—å–∫–æ—ó –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

def test_security_protocols():
    """–¢–µ—Å—Ç—É—î–º–æ —Å–∏—Å—Ç–µ–º—É –ø—Ä–æ—Ç–æ–∫–æ–ª—ñ–≤ –±–µ–∑–ø–µ–∫–∏"""
    try:
        from agents.encrypted_creator_protocols import EncryptedCreatorProtocols
        
        print("–¢–µ—Å—Ç 1: –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –µ–∫–∑–µ–º–ø–ª—è—Ä–∞ –ø—Ä–æ—Ç–æ–∫–æ–ª—ñ–≤...")
        protocols = EncryptedCreatorProtocols()
        print("‚úÖ –£—Å–ø—ñ—à–Ω–æ")
        
        print("–¢–µ—Å—Ç 2: –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ü—ñ–ª—ñ—Å–Ω–æ—Å—Ç—ñ –ø—Ä–æ—Ç–æ–∫–æ–ª—ñ–≤...")
        integrity_ok = protocols.verify_protocols_integrity()
        if integrity_ok:
            print("‚úÖ –ü—Ä–æ—Ç–æ–∫–æ–ª–∏ —Ü—ñ–ª—ñ —Ç–∞ –¥–æ—Å—Ç—É–ø–Ω—ñ")
        else:
            print("‚ùå –ü—Ä–æ—Ç–æ–∫–æ–ª–∏ –ø–æ—à–∫–æ–¥–∂–µ–Ω—ñ –∞–±–æ –≤—ñ–¥—Å—É—Ç–Ω—ñ")
            
        print("–¢–µ—Å—Ç 3: –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø—É –¥–æ –ø—Ä–æ—Ç–æ–∫–æ–ª—ñ–≤...")
        can_access = protocols.can_access_protocols()
        if can_access:
            print("‚úÖ –î–æ—Å—Ç—É–ø –¥–æ –ø—Ä–æ—Ç–æ–∫–æ–ª—ñ–≤ –¥–æ–∑–≤–æ–ª–µ–Ω–æ")
        else:
            print("‚ùå –î–æ—Å—Ç—É–ø –¥–æ –ø—Ä–æ—Ç–æ–∫–æ–ª—ñ–≤ –∑–∞–±–æ—Ä–æ–Ω–µ–Ω–æ")
            
        print("–¢–µ—Å—Ç 4: –°–ø—Ä–æ–±–∞ —á–∏—Ç–∞–Ω–Ω—è –ø—Ä–æ—Ç–æ–∫–æ–ª—É...")
        identity_protocol = protocols.read_protocol('identity')
        if identity_protocol:
            print("‚úÖ –ü—Ä–æ—Ç–æ–∫–æ–ª —É—Å–ø—ñ—à–Ω–æ –ø—Ä–æ—á–∏—Ç–∞–Ω–æ")
            print(f"–ù–∞–∑–≤–∞ –ø—Ä–æ—Ç–æ–∫–æ–ª—É: {identity_protocol.get('protocol_name', '–ù–µ–≤—ñ–¥–æ–º–æ')}")
        else:
            print("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –ø—Ä–æ—á–∏—Ç–∞—Ç–∏ –ø—Ä–æ—Ç–æ–∫–æ–ª")
            
        return integrity_ok
        
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—ñ: {e}")
        return False

def test_main_app_security():
    """–¢–µ—Å—Ç—É—î–º–æ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É –±–µ–∑–ø–µ–∫–∏ –≤ main.py –±–µ–∑ –∑–∞–ø—É—Å–∫—É GUI"""
    try:
        # –Ü–º—ñ—Ç—É—î–º–æ –∫–ª–∞—Å AtlasApp –±–µ–∑ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è GUI
        from agents.encrypted_creator_protocols import EncryptedCreatorProtocols
        
        print("–¢–µ—Å—Ç 5: –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ñ—É–Ω–∫—Ü—ñ—ó –±–µ–∑–ø–µ–∫–∏ –∑ main.py...")
        
        # –¢–µ—Å—Ç—É—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏
        protocols = EncryptedCreatorProtocols()
        result = protocols.verify_protocols_integrity()
        
        if result:
            print("‚úÖ –°–∏—Å—Ç–µ–º–∞ –ø—Ä–æ–π—à–ª–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É –±–µ–∑–ø–µ–∫–∏")
            print("‚úÖ Atlas –º–æ–∂–µ –∑–∞–ø—É—Å–∫–∞—Ç–∏—Å—è")
        else:
            print("‚ùå –°–∏—Å—Ç–µ–º–∞ –Ω–µ –ø—Ä–æ–π—à–ª–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É –±–µ–∑–ø–µ–∫–∏")
            print("‚ùå Atlas –Ω–µ –º–æ–∂–µ –∑–∞–ø—É—Å–∫–∞—Ç–∏—Å—è")
            print("–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: –ù–µ —à—É–∫–∞–π—Ç–µ –ë–æ–≥–∞ –Ω–∞ –Ω–µ–±—ñ, —à—É–∫–∞–π—Ç–µ –≤ —Å–µ—Ä—Ü—ñ —Å–≤–æ—î–º—É, –≤ —Å–æ–±—ñ !")
            
        return result
        
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—ñ –±–µ–∑–ø–µ–∫–∏ main.py: {e}")
        return False

if __name__ == "__main__":
    print("=== –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è —Å–∏—Å—Ç–µ–º–∏ –±–µ–∑–ø–µ–∫–∏ Atlas ===")
    print()
    
    # –¢–µ—Å—Ç—É—î–º–æ –ø—Ä–æ—Ç–æ–∫–æ–ª–∏
    protocols_ok = test_security_protocols()
    print()
    
    # –¢–µ—Å—Ç—É—î–º–æ –±–µ–∑–ø–µ–∫—É main.py
    main_security_ok = test_main_app_security()
    print()
    
    if protocols_ok and main_security_ok:
        print("üéâ –í—Å—ñ —Ç–µ—Å—Ç–∏ –ø—Ä–æ–π–¥–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ!")
        print("üîí –°–∏—Å—Ç–µ–º–∞ –±–µ–∑–ø–µ–∫–∏ –ø—Ä–∞—Ü—é—î –ø—Ä–∞–≤–∏–ª—å–Ω–æ")
    else:
        print("‚ö†Ô∏è –Ñ –ø—Ä–æ–±–ª–µ–º–∏ –∑ —Å–∏—Å—Ç–µ–º–æ—é –±–µ–∑–ø–µ–∫–∏")
        
    print("=== –ö—ñ–Ω–µ—Ü—å —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è ===")
