#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–∏–π —Ç–µ—Å—Ç Gemini API –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Ä–æ–±–æ—Ç–∏ —á–∞—Ç—É
"""

import os
import sys
from pathlib import Path

#–î–æ–¥–∞—î–º–æ –ø–æ—Ç–æ—á–Ω—É –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—é –¥–æ —à–ª—è—Ö—É
sys.path.insert(0, str(Path(__file__).parent))

def test_gemini_chat():
    """–¢–µ—Å—Ç—É—î–º–æ Gemini —á–∞—Ç"""
    print("üß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è Gemini API...")
    
    try:
        #–Ü–º–ø–æ—Ä—Ç—É—î–º–æ –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ –∫–ª–∞—Å–∏
        from agents.token_tracker import TokenTracker, TokenUsage
        from agents.llm_manager import LLMManager
        
        #–°—Ç–≤–æ—Ä—é—î–º–æ token tracker
        token_tracker = TokenTracker()
        
        #–°—Ç–≤–æ—Ä—é—î–º–æ LLM manager
        llm_manager = LLMManager(token_tracker)
        
        #–ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ Gemini –∫–ª—ñ—î–Ω—Ç —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ
        if not llm_manager.gemini_client:
            print("‚ùå Gemini –∫–ª—ñ—î–Ω—Ç –Ω–µ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ")
            return False
        
        print("‚úÖ Gemini –∫–ª—ñ—î–Ω—Ç —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ")
        
        #–¢–µ—Å—Ç—É—î–º–æ –ø—Ä–æ—Å—Ç–∏–π —á–∞—Ç
        test_messages = [
            {"role": "user", "content": "–ü—Ä–∏–≤—ñ—Ç! –°–∫–∞–∂–∏ —â–æ—Å—å —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é –º–æ–≤–æ—é."}
        ]
        
        print("üì§ –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ —Ç–µ—Å—Ç–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è...")
        
        #–í–∏–∫–ª–∏–∫–∞—î–º–æ —á–∞—Ç
        try:
            response = llm_manager._chat_gemini(test_messages)
            print(f"‚úÖ –û—Ç—Ä–∏–º–∞–Ω–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å: {response.response_text[:100]}...")
            print(f"üìä –¢–æ–∫–µ–Ω–∏: prompt={response.prompt_tokens}, completion={response.completion_tokens}")
            return True
            
        except Exception as e:
            print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ —á–∞—Ç—É: {e}")
            return False
            
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ —ñ–º–ø–æ—Ä—Ç—É –∞–±–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó: {e}")
        return False

def test_config():
    """–¢–µ—Å—Ç—É—î–º–æ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—é"""
    print("\nüîß –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó...")
    
    #–ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ config.ini
    if not os.path.exists('config.ini'):
        print("‚ùå config.ini –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")
        return False
    
    print("‚úÖ config.ini –∑–Ω–∞–π–¥–µ–Ω–æ")
    
    #–ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ .env
    if not os.path.exists('.env'):
        print("‚ùå .env –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")
        return False
    
    print("‚úÖ .env –∑–Ω–∞–π–¥–µ–Ω–æ")
    
    #–ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∑–º—ñ–Ω–Ω—ñ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞
    gemini_key = os.getenv('GEMINI_API_KEY')
    if not gemini_key or gemini_key.startswith('your-'):
        print("‚ùå GEMINI_API_KEY –Ω–µ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–æ")
        return False
    
    print("‚úÖ GEMINI_API_KEY –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–æ")
    return True

def main():
    """–ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è"""
    print("üöÄ Atlas Gemini API Test")
    print("=" * 30)
    
    #–ü–µ—Ä–µ—Ö—ñ–¥ –¥–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó Atlas
    atlas_dir = Path(__file__).parent
    os.chdir(atlas_dir)
    
    #–¢–µ—Å—Ç—É—î–º–æ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—é
    if not test_config():
        print("\n‚ùå –ü—Ä–æ–±–ª–µ–º–∏ –∑ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—î—é")
        return False
    
    #–¢–µ—Å—Ç—É—î–º–æ Gemini API
    if test_gemini_chat():
        print("\nüéâ Gemini API –ø—Ä–∞—Ü—é—î –ø—Ä–∞–≤–∏–ª—å–Ω–æ!")
        return True
    else:
        print("\n‚ùå –ü—Ä–æ–±–ª–µ–º–∏ –∑ Gemini API")
        return False

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)
