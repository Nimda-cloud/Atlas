[tool.ruff]
# Вказуємо цільову версію Python
# Замініть на вашу версію, наприклад py39
target-version = "py39"

# Шляхи до коду для аналізу
src = ["."]

# Виключення непотрібних директорій
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "backup_archive",
    "backup_ui",
    "backup_ui_qt",
]

line-length = 120

[tool.ruff.lint]
select = ["E", "F", "B", "SIM", "I"]
ignore = ["E501", "C901"]
fixable = ["ALL"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.bandit]
# Configuration for bandit security linter
exclude_dirs = ["backup_archive", "backup_ui", "backup_ui_qt", "tests", ".venv"]
skips = [
    "B101",
    "B601",
    "B602",
    "B603",
] # Skip assert statements and subprocess calls in testing

[tool.bandit.assert_used]
skips = ["*_test.py", "*/test_*.py", "**/tests/**"]

[tool.pytest.ini_options]
# Pytest configuration
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short --strict-markers"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "asyncio: mark a test as an asyncio test",
    "quality: mark tests related to quality assurance",
]

[tool.coverage.run]
source = ["."]
branch = true
omit = [
    # Backup directories
    "backup_archive/*",
    "backup_ui/*",
    "backup_ui_qt/*",
    # Test files
    "tests/*",
    "*_test.py",
    "test_*.py",
    # Virtual environments
    ".venv/*",
    "venv/*",
    "env/*",
    # Build and cache directories
    "build/*",
    "dist/*",
    "*.egg-info/*",
    "__pycache__/*",
    ".pytest_cache/*",
    ".ruff_cache/*",
    # Configuration files
    "setup.py",
    "conftest.py",
    # Scripts and utilities (optional)
    "scripts/*",
    "dev-tools/*",
    # Documentation
    "docs/*",
    "*.md",
    "*.rst",
    "*/site-packages/*",
]

[tool.coverage.report]
exclude_lines = [
    # Have to re-enable the standard pragma
    "pragma: no cover",
    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self\\.debug",
    "if settings.DEBUG",
    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",
    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    # Don't complain about abstract methods
    "@(abc\\.)?abstractmethod",
]
show_missing = true
precision = 2

[tool.coverage.html]
directory = "coverage_html_report"
