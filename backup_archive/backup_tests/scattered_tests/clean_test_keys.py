#!/usr/bin/env python3
"""
–®–≤–∏–¥–∫–µ –æ—á–∏—â–µ–Ω–Ω—è —Ç–µ—Å—Ç–æ–≤–∏—Ö API –∫–ª—é—á—ñ–≤ –∑ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó Atlas
"""

import sys

sys.path.append("/workspaces/autoclicker")


def clean_test_keys():
    """–û—á–∏—Å—Ç–∏—Ç–∏ –≤—Å—ñ —Ç–µ—Å—Ç–æ–≤—ñ –∫–ª—é—á—ñ –∑ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó"""
    try:
        from config_manager import ConfigManager

        config = ConfigManager()
        settings = config.load()

        print("üßπ –û—á–∏—â–µ–Ω–Ω—è —Ç–µ—Å—Ç–æ–≤–∏—Ö API –∫–ª—é—á—ñ–≤...")

        if "api_keys" not in settings:
            settings["api_keys"] = {}

        # –¢–µ—Å—Ç–æ–≤—ñ –∫–ª—é—á—ñ –¥–ª—è deletion
        test_keys = [
            "111",
            "test",
            "demo",
            "example",
            "test_openai_key",
            "test_gemini_key",
            "test_mistral_key",
        ]

        cleaned = []
        for provider in ["openai", "gemini", "mistral", "groq", "anthropic"]:
            current_key = settings["api_keys"].get(provider, "")

            if current_key in test_keys or len(current_key) < 10:
                if current_key:
                    print(f"üóëÔ∏è  –í–∏–¥–∞–ª–µ–Ω–æ —Ç–µ—Å—Ç–æ–≤–∏–π –∫–ª—é—á {provider}: [{current_key}]")
                    cleaned.append(provider)
                settings["api_keys"][provider] = ""
            else:
                print(f"‚úÖ {provider}: {'–í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ' if current_key else '–ü–æ—Ä–æ–∂–Ω—å–æ'}")

        # –ó–±–µ—Ä–µ–≥—Ç–∏ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—é
        config.save(settings)

        if cleaned:
            print(f"\nüéØ –û—á–∏—â–µ–Ω–æ —Ç–µ—Å—Ç–æ–≤—ñ –∫–ª—é—á—ñ: {', '.join(cleaned)}")
        else:
            print("\n‚ú® –¢–µ—Å—Ç–æ–≤–∏—Ö –∫–ª—é—á—ñ–≤ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")

        print("\nüìù –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó:")
        print("1. –í—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å —Å–ø—Ä–∞–≤–∂–Ω—ñ API –∫–ª—é—á—ñ —á–µ—Ä–µ–∑ GUI Atlas")
        print("2. –ê–±–æ –µ–∫—Å–ø–æ—Ä—Ç—É–π—Ç–µ –∑–º—ñ–Ω–Ω—ñ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞:")
        print("   export GEMINI_API_KEY='your_real_key'")
        print("   export MISTRAL_API_KEY='your_real_key'")

        return True

    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {e}")
        return False


if __name__ == "__main__":
    print("üîß Atlas - –û—á–∏—â–µ–Ω–Ω—è —Ç–µ—Å—Ç–æ–≤–∏—Ö API –∫–ª—é—á—ñ–≤")
    print("=" * 50)

    success = clean_test_keys()

    print("\n" + "=" * 50)
    if success:
        print("‚úÖ –û–ß–ò–©–ï–ù–ù–Ø –ó–ê–í–ï–†–®–ï–ù–û")
        print("üöÄ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç—ñ—Ç—å Atlas –¥–ª—è –∑–∞—Å—Ç–æ—Å—É–≤–∞–Ω–Ω—è –∑–º—ñ–Ω")
    else:
        print("‚ùå –í–∏–Ω–∏–∫–ª–∏ –ø–æ–º–∏–ª–∫–∏ –ø—ñ–¥ —á–∞—Å –æ—á–∏—â–µ–Ω–Ω—è")
