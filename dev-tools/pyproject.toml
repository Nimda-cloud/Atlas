[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "atlas"
version = "0.1.0"
description = "Atlas - Autonomous AI Assistant"
authors = [{name = "Atlas Development Team"}]
license = {text = "MIT"}
requires-python = ">=3.8"

[tool.ruff]
# Allow fix for all enabled rules (when `--fix`) is provided.
target-version = "py38"
line-length = 88
indent-width = 4

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "venv-macos",
    "unused",
]

[tool.ruff.lint]
# Enable pycodestyle (`E`) and Pyflakes (`F`) codes by default.
select = ["E", "F", "W", "C90", "I", "N", "UP", "YTT", "S", "BLE", "FBT", "B", "A", "COM", "C4", "DTZ", "T10", "DJ", "EM", "EXE", "FA", "ISC", "ICN", "G", "INP", "PIE", "T20", "PYI", "PT", "Q", "RSE", "RET", "SLF", "SLOT", "SIM", "TID", "TCH", "INT", "ARG", "PTH", "ERA", "PD", "PGH", "PL", "TRY", "FLY", "NPY", "AIR", "PERF", "FURB", "LOG", "RUF"]

# Ignore specific errors that are not critical for Atlas development
ignore = [
    "E402",     # Module level import not at top of file (needed for platform-specific imports)
    "F401",     # Imported but unused (common in __init__.py files)
    "F841",     # Local variable assigned but never used (debug variables)
    "E722",     # Do not use bare except (legacy code compatibility)
    "S101",     # Use of assert (used in development/testing)
    "BLE001",   # Do not catch blind exception (legacy compatibility)
    "TRY003",   # Avoid specifying long messages outside exception class
]

fixable = ["ALL"]
unfixable = []

[tool.ruff.lint.isort]
known-first-party = ["agents", "utils", "intelligence", "monitoring", "tools", "ui"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*.py" = ["S101", "PLR2004"]  # Allow assert and magic numbers in tests
"dev-tools/*.py" = ["S101", "T201"]  # Allow print and assert in dev tools

[tool.mypy]
exclude = ["unused/"]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

# Per-module options
[[tool.mypy.overrides]]
module = [
    "customtkinter.*",
    "PIL.*",
    "matplotlib.*",
    "pyautogui.*",
    "pynput.*",
    "chromadb.*",
    "sentence_transformers.*",
    "openai.*",
    "anthropic.*",
    "groq.*",
    "requests.*",
    "pygame.*",
    "cv2.*",
    "numpy.*",
    "pandas.*",
    "sklearn.*",
    "scipy.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "performance: marks tests as performance benchmarks",
]

[tool.coverage.run]
source = ["agents", "utils", "intelligence", "monitoring", "tools"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/conftest.py",
    "*/venv/*",
    "*/venv-macos/*",
    "*/unused/*",
    "*/dev-tools/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.coverage.html]
directory = "htmlcov"

# Docstring coverage configuration
[tool.interrogate]
ignore-init-method = true
ignore-init-module = false
ignore-magic = false
ignore-semiprivate = false
ignore-private = false
ignore-property-decorators = false
ignore-module = false
ignore-nested-functions = false
ignore-nested-classes = true
ignore-setters = false
fail-under = 85
exclude = ["setup.py", "docs", "build", "tests", "venv", "venv-macos", "unused", "dev-tools", "scripts", "monitoring", "tools", "ui", "data", "config", "assets", "requirements", "rules", "plugins", "test_generated_tools", "test_temp_generated_tools"]
ignore-regex = ["^get$", "^mock_.*", "^dummy_.*", "^_.*"]
verbose = 0
quiet = false
whitelist-regex = []
color = true
