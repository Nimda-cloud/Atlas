#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–∏–π —Ç–µ—Å—Ç –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω—å –∑ API –∫–ª—é—á–∞–º–∏.
"""

import sys

sys.path.append("/Users/dev/Documents/autoclicker")

from utils.config_manager import ConfigManager


def test_api_keys_saving():
    """–¢–µ—Å—Ç storage —Ç–∞ loading API –∫–ª—é—á—ñ–≤."""
    print("üîß –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è/–∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è API –∫–ª—é—á—ñ–≤...")

    config_manager = ConfigManager()

    #–°—Ç–≤–æ—Ä–∏–º–æ —Ç–µ—Å—Ç–æ–≤—ñ settings
    test_settings = {
        "api_keys": {
            "openai": "test_openai_key",
            "gemini": "test_gemini_key",
            "anthropic": "test_anthropic_key",
            "groq": "test_groq_key",
            "mistral": "test_mistral_key",
        },
        "current_provider": "gemini",
    }

    #–ó–±–µ—Ä–µ–∂–µ–º–æ
    config_manager.save(test_settings)
    print("‚úÖ –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∑–±–µ—Ä–µ–∂–µ–Ω–æ")

    #–ó–∞–≤–∞–Ω—Ç–∞–∂–∏–º–æ –∑–Ω–æ–≤—É
    loaded_settings = config_manager.load()

    #–ü–µ—Ä–µ–≤—ñ—Ä–∏–º–æ, —á–∏ –≤—Å—ñ –∫–ª—é—á—ñ –Ω–∞ –º—ñ—Å—Ü—ñ
    api_keys = loaded_settings.get("api_keys", {})

    expected_keys = ["openai", "gemini", "anthropic", "groq", "mistral"]
    for key in expected_keys:
        if key in api_keys:
            print(f"‚úÖ {key}: {api_keys[key]}")
        else:
            print(f"‚ùå {key}: –ù–ï –ó–ù–ê–ô–î–ï–ù–û")

    #–ü–µ—Ä–µ–≤—ñ—Ä–∏–º–æ –ø—Ä–æ–≤–∞–π–¥–µ—Ä
    provider = loaded_settings.get("current_provider", "")
    print(f"üéØ –ü—Ä–æ–≤–∞–π–¥–µ—Ä: {provider}")

    #–¢–µ—Å—Ç –º–µ—Ç–æ–¥—ñ–≤ getting –∫–ª—é—á—ñ–≤
    print("\nüîë –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –º–µ—Ç–æ–¥—ñ–≤ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∫–ª—é—á—ñ–≤:")
    print(f"  openai: {config_manager.get_openai_api_key()}")
    print(f"  gemini: {config_manager.get_gemini_api_key()}")
    print(f"  groq: {config_manager.get_groq_api_key()}")
    print(f"  mistral: {config_manager.get_mistral_api_key()}")

    return loaded_settings

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç—ñ–≤ –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω—å –∑ API –∫–ª—é—á–∞–º–∏...")
    print("=" * 60)

    #–¢–µ—Å—Ç API –∫–ª—é—á—ñ–≤
    settings = test_api_keys_saving()

    print("\n" + "=" * 60)
    print("üèÅ –¢–µ—Å—Ç–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
