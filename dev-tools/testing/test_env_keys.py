#!/usr/bin/env python3
"""
–¢–µ—Å—Ç loading –∫–ª—é—á—ñ–≤ —Ç–∞ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞ –∑ .env —Ñ–∞–π–ª—É
"""

import os
from pathlib import Path


def test_env_loading():
    print("üîç –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑ .env —Ñ–∞–π–ª—É")
    print("=" * 50)

    #1. –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å .env —Ñ–∞–π–ª—É
    env_file = Path(".env")
    if env_file.exists():
        print(f"‚úÖ .env —Ñ–∞–π–ª –∑–Ω–∞–π–¥–µ–Ω–æ: {env_file.absolute()}")

        #–ü–æ–∫–∞–∑–∞—Ç–∏ –≤–º—ñ—Å—Ç
        with open(env_file) as f:
            content = f.read()
        print("üìÑ –í–º—ñ—Å—Ç .env —Ñ–∞–π–ª—É:")
        print(content)
    else:
        print("‚ùå .env —Ñ–∞–π–ª –ù–ï –∑–Ω–∞–π–¥–µ–Ω–æ!")
        return False

    print("\n" + "=" * 50)

    #2. –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ .env
    try:
        from dotenv import load_dotenv
        print("‚úÖ python-dotenv —ñ–º–ø–æ—Ä—Ç–æ–≤–∞–Ω–æ")

        load_dotenv()
        print("‚úÖ .env —Ñ–∞–π–ª –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ")
    except ImportError:
        print("‚ùå python-dotenv –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
        return False
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è .env: {e}")
        return False

    #3. –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –∑–º—ñ–Ω–Ω—ñ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞
    print("\nüîë –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ API –∫–ª—é—á—ñ–≤:")
    api_keys = {
        "OPENAI_API_KEY": os.getenv("OPENAI_API_KEY"),
        "GEMINI_API_KEY": os.getenv("GEMINI_API_KEY"),
        "MISTRAL_API_KEY": os.getenv("MISTRAL_API_KEY"),
        "GROQ_API_KEY": os.getenv("GROQ_API_KEY"),
    }

    for key, value in api_keys.items():
        if value:
            #–ü—Ä–∏—Ö–æ–≤–∞—Ç–∏ –∫–ª—é—á, –ø–æ–∫–∞–∑–∞—Ç–∏ —Ç—ñ–ª—å–∫–∏ –ø–µ—Ä—à—ñ —Ç–∞ –æ—Å—Ç–∞–Ω–Ω—ñ —Å–∏–º–≤–æ–ª–∏
            if len(value) > 10:
                display = f"{value[:8]}...{value[-4:]}"
            else:
                display = "***"
            print(f"‚úÖ {key}: {display}")
        else:
            print(f"‚ùå {key}: –ù–ï –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")

    print("\n‚öôÔ∏è –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å:")
    settings = {
        "DEFAULT_LLM_PROVIDER": os.getenv("DEFAULT_LLM_PROVIDER"),
        "DEFAULT_LLM_MODEL": os.getenv("DEFAULT_LLM_MODEL"),
    }

    for key, value in settings.items():
        if value:
            print(f"‚úÖ {key}: {value}")
        else:
            print(f"‚ùå {key}: –ù–ï –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")

    print("\n" + "=" * 50)

    #4. –¢–µ—Å—Ç—É–≤–∞—Ç–∏ ConfigManager
    print("üîß –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è ConfigManager:")
    try:
        from config_manager import ConfigManager
        config = ConfigManager()
        print("‚úÖ ConfigManager —Å—Ç–≤–æ—Ä–µ–Ω–æ")

        #–¢–µ—Å—Ç—É–≤–∞—Ç–∏ –º–µ—Ç–æ–¥–∏ getting –∫–ª—é—á—ñ–≤
        print("\nüìã –ú–µ—Ç–æ–¥–∏ ConfigManager:")

        gemini_key = config.get_gemini_api_key()
        if gemini_key:
            display = f"{gemini_key[:8]}...{gemini_key[-4:]}" if len(gemini_key) > 10 else "***"
            print(f"‚úÖ get_gemini_api_key(): {display}")
        else:
            print("‚ùå get_gemini_api_key(): –ø–æ—Ä–æ–∂–Ω—ñ–π")

        mistral_key = config.get_mistral_api_key()
        if mistral_key:
            display = f"{mistral_key[:8]}...{mistral_key[-4:]}" if len(mistral_key) > 10 else "***"
            print(f"‚úÖ get_mistral_api_key(): {display}")
        else:
            print("‚ùå get_mistral_api_key(): –ø–æ—Ä–æ–∂–Ω—ñ–π")

        provider = config.get_current_provider()
        print(f"‚úÖ get_current_provider(): {provider}")

        model = config.get_current_model()
        print(f"‚úÖ get_current_model(): {model}")

    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ ConfigManager: {e}")
        import traceback
        traceback.print_exc()
        return False

    print("\nüéØ –í–∏—Å–Ω–æ–≤–æ–∫:")

    #–ü—ñ–¥—Ä–∞—Ö—É–≤–∞—Ç–∏, —Å–∫—ñ–ª—å–∫–∏ –∫–ª—é—á—ñ–≤ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ
    valid_keys = sum(1 for v in api_keys.values() if v and v not in ["", "your_real_gemini_key_here", "your_real_mistral_key_here", "your_real_groq_key_here"])
    total_keys = len(api_keys)

    if valid_keys > 0:
        print(f"‚úÖ {valid_keys}/{total_keys} API –∫–ª—é—á—ñ–≤ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ")
        if settings["DEFAULT_LLM_PROVIDER"]:
            print(f"‚úÖ –î–µ—Ñ–æ–ª—Ç–Ω–∏–π –ø—Ä–æ–≤–∞–π–¥–µ—Ä: {settings['DEFAULT_LLM_PROVIDER']}")
        if settings["DEFAULT_LLM_MODEL"]:
            print(f"‚úÖ –î–µ—Ñ–æ–ª—Ç–Ω–∞ –º–æ–¥–µ–ª—å: {settings['DEFAULT_LLM_MODEL']}")
        print("üöÄ .env —Ñ–∞–π–ª –ø—Ä–∞—Ü—é—î –ø—Ä–∞–≤–∏–ª—å–Ω–æ!")
        return True
    print("‚ö†Ô∏è –ù–µ–º–∞—î –¥—ñ–π—Å–Ω–∏—Ö API –∫–ª—é—á—ñ–≤")
    print("üí° –í—ñ–¥—Ä–µ–¥–∞–≥—É–π—Ç–µ .env —Ñ–∞–π–ª —Ç–∞ –¥–æ–¥–∞–π—Ç–µ —Å–ø—Ä–∞–≤–∂–Ω—ñ –∫–ª—é—á—ñ")
    return False

if __name__ == "__main__":
    test_env_loading()
