#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–µ—Ñ–æ–ª—Ç–Ω–æ–≥–æ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞ –∑ .env —Ñ–∞–π–ª—É
"""
import os
import sys
from pathlib import Path

# Add project root to Python path
project_root = Path(__file__).parent
sys.path.insert(0, str(project_root))

def test_env_loading():
    print("üîß –¢–µ—Å—Ç –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–µ—Ñ–æ–ª—Ç–Ω–æ–≥–æ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞ –∑ .env")
    print("=" * 50)
    
    # 1. –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ .env —è–∫ —Ü–µ —Ä–æ–±–∏—Ç—å main.py
    from dotenv import load_dotenv
    print("üìÅ –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ .env —Ñ–∞–π–ª...")
    load_dotenv()
    
    # 2. –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –∑–º—ñ–Ω–Ω—ñ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞
    print("\nüåç –ó–º—ñ–Ω–Ω—ñ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞ –ø—ñ—Å–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è .env:")
    provider_env = os.getenv('DEFAULT_LLM_PROVIDER', '–ù–ï –ó–ù–ê–ô–î–ï–ù–û')
    model_env = os.getenv('DEFAULT_LLM_MODEL', '–ù–ï –ó–ù–ê–ô–î–ï–ù–û')
    print(f"   DEFAULT_LLM_PROVIDER: {provider_env}")
    print(f"   DEFAULT_LLM_MODEL: {model_env}")
    
    # 3. –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ ConfigManager
    print("\n‚öôÔ∏è ConfigManager (—è–∫ –≤ –ø—Ä–æ–≥—Ä–∞–º—ñ):")
    from config_manager import ConfigManager
    config = ConfigManager()
    
    provider_config = config.get_current_provider()
    model_config = config.get_current_model()
    print(f"   get_current_provider(): {provider_config}")
    print(f"   get_current_model(): {model_config}")
    
    # 4. –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ API –∫–ª—é—á—ñ
    print("\nüîë API –∫–ª—é—á—ñ:")
    gemini_key = config.get_gemini_api_key()
    mistral_key = config.get_mistral_api_key()
    print(f"   Gemini: {'‚úì –Ñ' if gemini_key else '‚úó –ù–µ–º–∞—î'}")
    print(f"   Mistral: {'‚úì –Ñ' if mistral_key else '‚úó –ù–µ–º–∞—î'}")
    
    # 5. –¢–µ—Å—Ç LLMManager —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
    print("\nü§ñ LLMManager —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è:")
    try:
        from agents.llm_manager import LLMManager
        from agents.token_tracker import TokenTracker
        
        token_tracker = TokenTracker()
        llm_manager = LLMManager(token_tracker=token_tracker, config_manager=config)
        
        print(f"   LLM Manager —Å—Ç–≤–æ—Ä–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ")
        print(f"   –ü–æ—Ç–æ—á–Ω–∏–π –ø—Ä–æ–≤–∞–π–¥–µ—Ä –±—É–¥–µ: {provider_config}")
        
    except Exception as e:
        print(f"   ‚ùå –ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è LLM Manager: {e}")
    
    print("\n" + "=" * 50)
    print("üìä –í–ò–°–ù–û–í–û–ö:")
    
    if provider_config == "gemini" and gemini_key:
        print("‚úÖ –ü—Ä–æ–≥—Ä–∞–º–∞ —É—Å–ø—ñ—à–Ω–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç—å Gemini —è–∫ –¥–µ—Ñ–æ–ª—Ç–Ω–∏–π –ø—Ä–æ–≤–∞–π–¥–µ—Ä –∑ .env")
        print("‚úÖ API –∫–ª—é—á Gemini –¥–æ—Å—Ç—É–ø–Ω–∏–π")
        return True
    else:
        print("‚ö†Ô∏è –ú–æ–∂–ª–∏–≤—ñ –ø—Ä–æ–±–ª–µ–º–∏ –∑ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è–º–∏")
        return False

if __name__ == "__main__":
    success = test_env_loading()
    if success:
        print("\nüéâ –í—Å–µ –≥–æ—Ç–æ–≤–æ! –ü—Ä–æ–≥—Ä–∞–º–∞ –±—É–¥–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∑ .env —Ñ–∞–π–ª—É")
    else:
        print("\n‚ö†Ô∏è –ü–æ—Ç—Ä—ñ–±–Ω–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å")
